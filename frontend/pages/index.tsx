// packages
import Head from 'next/head';
import Image from 'next/image';
import {
  useAccount,
  useConnect,
  useDisconnect,
  usePrepareContractWrite,
  useContractWrite,
  useWaitForTransaction,
} from 'wagmi';
import { InjectedConnector } from 'wagmi/connectors/injected';

// styles
import styles from '../styles/Home.module.css';

// abi
// TODO: IF you wanted to you could conditionally pull from different networks
// but for now I will pull from local host
import marketPlaceAbi from '../../backend/deployments/localhost/NFTMarketplace.json';

export default function Home() {
  const { address } = useAccount();
  const { connect } = useConnect({
    connector: new InjectedConnector(),
  });
  const { disconnect } = useDisconnect();
  // const abi = JSON.parse(marketPlaceAbi);
  const { config } = usePrepareContractWrite({
    address: marketPlaceAbi.address,
    abi: [
      {
        name: 'mint',
        type: 'function',
        stateMutability: 'nonpayable',
        inputs: [],
        outputs: [],
      },
    ],
    functionName: 'mint',
  });

  const { data, write } = useContractWrite(config);

  const { isLoading, isSuccess } = useWaitForTransaction({
    hash: data?.hash,
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Basic NFT drop!</h1>

        {address && (
          <div className={styles.description}>
            You&apos;re connected to{' '}
            <code className={`${styles.code} about-link`}>{address}</code>
          </div>
        )}

        <div
          onClick={() => (address ? disconnect() : connect())}
          className={styles.grid}
        >
          <div className={styles.card}>
            <h2>{address ? 'Disconnect' : 'Connect'}</h2>
          </div>

          <div onClick={() => write && write()} className={styles.card}>
            <h2>{isLoading ? 'Minting...' : 'Mint'}</h2>
          </div>
        </div>
      </main>

      {isSuccess && (
        <div>
          Successfully minted your NFT!
          <div>
            <a href={`https://etherscan.io/tx/${data?.hash}`}>Etherscan</a>
          </div>
        </div>
      )}

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
